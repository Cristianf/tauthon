#! /usr/bin/env python

"""Non-terminal symbols of Python grammar (from "graminit.h")."""

#  This file is automatically generated; please don't muck it up!
#
#  To update the symbols in this file, 'cd' to the top directory of
#  the python source tree after building the interpreter and run:
#
#    ./python Lib/symbol.py

#--start constants--
single_input = 256
file_input = 257
eval_input = 258
decorator = 259
decorators = 260
decorated = 261
async_funcdef = 262
funcdef = 263
parameters = 264
typedargslist = 265
tname = 266
tfpdef = 267
tfplist = 268
varargslist = 269
vname = 270
vfpdef = 271
vfplist = 272
stmt = 273
simple_stmt = 274
small_stmt = 275
expr_stmt = 276
augassign = 277
print_stmt = 278
del_stmt = 279
pass_stmt = 280
flow_stmt = 281
break_stmt = 282
continue_stmt = 283
return_stmt = 284
yield_stmt = 285
raise_stmt = 286
import_stmt = 287
import_name = 288
import_from = 289
import_as_name = 290
dotted_as_name = 291
import_as_names = 292
dotted_as_names = 293
dotted_name = 294
global_stmt = 295
exec_stmt = 296
assert_stmt = 297
compound_stmt = 298
async_stmt = 299
if_stmt = 300
while_stmt = 301
for_stmt = 302
try_stmt = 303
with_stmt = 304
with_item = 305
except_clause = 306
suite = 307
testlist_safe = 308
old_test = 309
old_lambdef = 310
test = 311
or_test = 312
and_test = 313
not_test = 314
comparison = 315
comp_op = 316
expr = 317
xor_expr = 318
and_expr = 319
shift_expr = 320
arith_expr = 321
term = 322
factor = 323
power = 324
atom_expr = 325
atom = 326
listmaker = 327
testlist_comp = 328
lambdef = 329
trailer = 330
subscriptlist = 331
subscript = 332
sliceop = 333
exprlist = 334
testlist = 335
dictorsetmaker = 336
classdef = 337
arglist = 338
argument = 339
list_iter = 340
list_for = 341
list_if = 342
comp_iter = 343
comp_for = 344
comp_if = 345
testlist1 = 346
encoding_decl = 347
yield_expr = 348
yield_arg = 349
#--end constants--

sym_name = {}
for _name, _value in globals().items():
    if type(_value) is type(0):
        sym_name[_value] = _name


def main():
    import sys
    import token
    if len(sys.argv) == 1:
        sys.argv = sys.argv + ["Include/graminit.h", "Lib/symbol.py"]
    token.main()

if __name__ == "__main__":
    main()
